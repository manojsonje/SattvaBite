server:
  port: 8080

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 10
            redis-rate-limiter.burstCapacity: 20
        - name: CircuitBreaker
          args:
            name: default
            fallbackUri: forward:/fallback
      routes:
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: orderService
                fallbackUri: forward:/order-fallback
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                
        - id: food-catalogue-service
          uri: lb://food-catalogue-service
          predicates:
            - Path=/api/foods/**,/api/menu/**
          filters:
            - name: CircuitBreaker
              args:
                name: foodCatalogueService
                fallbackUri: forward:/food-fallback
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 40
                
        - id: restaurant-listing-service
          uri: lb://restaurant-listing-service
          predicates:
            - Path=/api/restaurants/**,/api/restaurant/**
          filters:
            - name: CircuitBreaker
              args:
                name: restaurantListingService
                fallbackUri: forward:/restaurant-fallback
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 15
                redis-rate-limiter.burstCapacity: 30
  sleuth:
    sampler:
      probability: 1.0
  zipkin:
    base-url: http://localhost:9411/

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.value}

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
  metrics:
    enable:
      http:
        server:
          requests: true

# Logging Configuration
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty: DEBUG

# Resilience4j Configuration
resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowType: COUNT_BASED
      minimumNumberOfCalls: 5
      waitDurationInOpenState: 10s
      failureRateThreshold: 50
  instances:
    orderService:
      baseConfig: default
    foodCatalogueService:
      baseConfig: default
    restaurantService:
      baseConfig: default
