server:
  port: 9094
  servlet:
    context-path: /api/orders
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css
    min-response-size: 1024

spring:
  profiles:
    active: dev
  application:
    name: order-service
  
  # MongoDB Configuration
  data:
    mongodb:
      uri: mongodb://${MONGODB_USERNAME:}:${MONGODB_PASSWORD:}@${MONGODB_HOST:localhost}:${MONGODB_PORT:27017}/${MONGODB_DATABASE:orderdb}?authSource=admin&retryWrites=true&w=majority
      auto-index-creation: true
  
  # Actuator Configuration
  actuator:
    endpoints:
      web:
        exposure:
          include: health,info,metrics,prometheus
    metrics:
      export:
        prometheus:
          enabled: true
    health:
      mongo:
        enabled: true
  
  # Web Configuration
  web:
    client:
      reactive:
        client:
          max-in-memory-size: 10MB
  
  # Sleuth Configuration
  sleuth:
    sampler:
      probability: 1.0
    web:
      client:
        enabled: true

# Logging Configuration
logging:
  level:
    org.mongodb.driver: ${LOG_LEVEL_MONGO:INFO}
    com.sattvabite: ${LOG_LEVEL_APP:INFO}
    org.springframework: ${LOG_LEVEL_SPRING:INFO}
    org.springframework.web: ${LOG_LEVEL_WEB:INFO}

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka/}
    healthcheck:
      enabled: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
    instance-id: ${spring.application.name}:${random.value}

# Resilience4j Configuration
resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowType: COUNT_BASED
      minimumNumberOfCalls: 5
      waitDurationInOpenState: 10s
      failureRateThreshold: 50

# Feign Client Configuration
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic
  compression:
    request:
      enabled: true
    response:
      enabled: true

# Zipkin Configuration for Distributed Tracing
management:
  tracing:
    sampling:
      probability: 1.0
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5,0.75,0.90,0.95,0.99
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
  
  # Sleuth & Zipkin for Distributed Tracing
  sleuth:
    sampler:
      probability: 1.0
    propagation:
      type: B3
  
  zipkin:
    base-url: ${ZIPKIN_BASE_URL:http://localhost:9411/}
    sender.type: web
    enabled: ${ZIPKIN_ENABLED:true}
  
  # Feign Client Configuration
  cloud:
    openfeign:
      client:
        config:
          default:
            connect-timeout: 5000
            read-timeout: 10000
            logger-level: full
            retryable: true
            decode404: false
            error-decoder: feign.codec.ErrorDecoder.Default
            retryer: feign.Retryer.Default
            request-interceptors: com.sattvabite.order.config.FeignRequestInterceptor
      compression:
        request:
          enabled: true
          mime-types: text/xml,application/xml,application/json
          min-request-size: 2048
        response:
          enabled: true
  
  # Resilience4j Circuit Breaker Configuration
  resilience4j.circuitbreaker:
    instances:
      userService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-type: COUNT_BASED
        minimum-number-of-calls: 5
        wait-duration-in-open-state: 5s
        failure-rate-threshold: 50
  
  # Web Client Configuration
  web:
    client:
      timeout: 30s
  
  # Logging Configuration
  logging:
    level:
      root: INFO
      com.sattvabite: DEBUG
      org.springframework.web: INFO
      org.hibernate.SQL: DEBUG
      org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    file:
      name: logs/order-service.log
    pattern:
      console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
      file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  
  # Swagger/OpenAPI Configuration
  swagger:
    enabled: true
    title: SattvaBite Order Service API
    description: API documentation for SattvaBite Order Service
    version: 1.0.0
    base-package: com.sattvabite.order.controller
    contact:
      name: SattvaBite Team
      email: support@sattvabite.com
      url: https://sattvabite.com

# External Service URLs
user-service:
  url: http://localhost:9091/api/users

# Application specific properties
app:
  order:
    default-page-size: 20
    max-page-size: 100
    token:
      secret: your-secret-key-here
      expiration-ms: 86400000  # 24 hours

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVICE_URL:http://localhost:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true
    healthcheck:
      enabled: true
    registry-fetch-interval-seconds: 5
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 15
    metadata-map:
      zone: ${ZONE:primary}
      version: 1.0.0

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: /actuator
      path-mapping:
        health: health
  endpoint:
    health:
      show-details: always
      show-components: always
      group:
        readiness:
          include: db,mongo,diskSpace,ping
        liveness:
          include: ping
    metrics:
      enabled: true
  health:
    defaults:
      enabled: true
    mongo:
      enabled: true
  metrics:
    enable:
      http:
        server:
          requests: true
    distribution:
      percentiles:
        http:
          server:
            requests: 0.5,0.75,0.95,0.99
    web:
      server:
        request:
          autotime:
            enabled: true
    export:
      prometheus:
        enabled: true
        step: 1m
        descriptions: true

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 100
        permittedNumberOfCallsInHalfOpenState: 10
        slidingWindowType: TIME_BASED
        minimumNumberOfCalls: 5
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        slowCallRateThreshold: 100
        slowCallDurationThreshold: 2s
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 100ms
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
  ratelimiter:
    configs:
      default:
        limitForPeriod: 100
        limitRefreshPeriod: 1s
        timeoutDuration: 100ms
  timelimiter:
    configs:
      default:
        timeoutDuration: 2s
        cancelRunningFuture: true
  thread-pool-bulkhead:
    configs:
      default:
        maxThreadPoolSize: 4
        coreThreadPoolSize: 2
        queueCapacity: 10

# Feign Client Configuration
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 10000
        loggerLevel: full
        retryer: com.sattvabite.order.config.CustomFeignRetryer
  compression:
    request:
      enabled: true
      mime-types: text/xml,application/xml,application/json
      min-request-size: 2048
    response:
      enabled: true

# Logging Configuration
logging:
  level:
    root: INFO
    com.sattvabite: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    feign: DEBUG
    org.springframework.cloud.openfeign: DEBUG
    org.springframework.cloud.sleuth: DEBUG

# API Versioning
api:
  version:
    default-version: v1
    header: X-API-Version
    param: version

# Logging Configuration
logging:
  level:
    root: INFO
    org.springframework.web: INFO
    com.sattvabite: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type: TRACE
    org.hibernate.stat: DEBUG
    org.hibernate.cache: DEBUG

# OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method

# Application specific properties
app:
  order:
    default-page-size: 20
    max-page-size: 100
    cors:
      allowed-origins: http://localhost:4200,http://localhost:3000
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
      allowed-headers: *
      allow-credentials: true
      max-age: 3600
